name: Deploy Worker (no envs)

on:
  push:
    branches: [ main ]   # ← change if your default branch is different
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Wrangler v4
        run: npm i -g wrangler@4

      - name: Who am I (debug)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: wrangler whoami

      # Apply migrations to the remote D1 (safe to run every deploy)
      - name: Apply migrations
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: wrangler d1 execute hotdog-db --file=./migrations/0001_init.sql --remote

      # First deploy creates the Worker script so secrets API will work
      - name: Deploy (create/update worker)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: wrangler deploy

      # Add secrets to the Worker (non-interactive). Idempotent.
      - name: Push Worker secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        shell: bash
        run: |
          set -e
          put () {
            local key="$1"; local val="$2"
            [ -z "$val" ] && { echo "Skipping $key (no value)"; return 0; }
            if wrangler secret list | grep -q "\"name\": \"$key\""; then
              echo "$key already set; skipping."
            else
              printf '%s' "$val" | wrangler secret put "$key"
            fi
          }
          put SLACK_SIGNING_SECRET "$SLACK_SIGNING_SECRET"
          put SLACK_BOT_TOKEN "$SLACK_BOT_TOKEN"

      # (Optional) Redeploy — not strictly required, secrets are live immediately
      - name: Deploy again (optional)
        if: always()
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: wrangler deploy
